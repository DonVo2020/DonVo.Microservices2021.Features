// <auto-generated />
using System;
using DonVo.CQRS.SignalR.BogusMoqTest.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DonVo.CQRS.SignalR.BogusMoqTest.Core.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210905181145_Initialize")]
    partial class Initialize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.ActingDepartmentHead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId1")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EmployeeId1");

                    b.ToTable("ActingDepartmentHeads");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.AdjustmentVoucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AdjustAmt")
                        .HasColumnType("float");

                    b.Property<int>("AdjustQty")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId1")
                        .HasColumnType("int");

                    b.Property<string>("InventoryItemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("InventoryItemId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupplierStationeryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EmployeeId1");

                    b.HasIndex("InventoryItemId");

                    b.HasIndex("InventoryItemId1");

                    b.HasIndex("SupplierStationeryId");

                    b.ToTable("AdjustmentVouchers");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.CollectionPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("CollectionPoints");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Department", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CollectionPointId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentHeadId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentRepId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CollectionPointId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Disbursement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateRequested")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DisbursedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisbursementStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Disbursements");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.DisbursementDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DisbursementId")
                        .HasColumnType("int");

                    b.Property<int?>("DisbursementId1")
                        .HasColumnType("int");

                    b.Property<string>("InventoryItemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("InventoryItemId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("QtyNeeded")
                        .HasColumnType("int");

                    b.Property<int>("QtyReceived")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DisbursementId");

                    b.HasIndex("DisbursementId1");

                    b.HasIndex("InventoryItemId");

                    b.HasIndex("InventoryItemId1");

                    b.ToTable("DisbursementDetails");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DepartmentId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DepartmentId1");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.InventoryItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Bin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("QtyInStock")
                        .HasColumnType("int");

                    b.Property<int>("ReorderLevel")
                        .HasColumnType("int");

                    b.Property<int>("ReorderQty")
                        .HasColumnType("int");

                    b.Property<int>("RequestQty")
                        .HasColumnType("int");

                    b.Property<string>("UOM")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemCategoryId");

                    b.ToTable("InventoryItems");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.InventoryManagement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId1")
                        .HasColumnType("int");

                    b.Property<string>("InventoryItemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("addQty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EmployeeId1");

                    b.HasIndex("InventoryItemId");

                    b.ToTable("InventoryManagements");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.ItemCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemCategories");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateRead")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSent")
                        .HasColumnType("datetime2");

                    b.Property<bool>("RecipientDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RecipientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SenderDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SenderId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.PurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("SupplierId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.PurchaseOrderDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InventoryItemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ItemCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InventoryItemId");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("PurchaseOrderDetails");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateRequested")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisbursementId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId1")
                        .HasColumnType("int");

                    b.Property<int?>("RetrievalId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DisbursementId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EmployeeId1");

                    b.HasIndex("RetrievalId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.RequestDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InventoryItemId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("QtyRequested")
                        .HasColumnType("int");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InventoryItemId");

                    b.HasIndex("RequestId");

                    b.ToTable("RequestDetails");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Retrieval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateRetrieved")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId1")
                        .HasColumnType("int");

                    b.Property<int>("RetrievalStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EmployeeId1");

                    b.ToTable("Retrievals");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.RetrievalDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InventoryItemId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("QtyNeeded")
                        .HasColumnType("int");

                    b.Property<int>("QtyRetrieved")
                        .HasColumnType("int");

                    b.Property<int>("RetrievalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InventoryItemId");

                    b.HasIndex("RetrievalId");

                    b.ToTable("RetrievalDetails");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Supplier", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaxNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GSTReg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.SupplierStationery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InventoryItemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("InventoryItemId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SupplierId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SupplierId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("TenderPrice")
                        .HasColumnType("real");

                    b.Property<string>("UOM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasAlternateKey("SupplierId", "InventoryItemId");

                    b.HasIndex("InventoryItemId");

                    b.HasIndex("InventoryItemId1");

                    b.HasIndex("SupplierId1");

                    b.ToTable("SupplierStationeries");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.ActingDepartmentHead", b =>
                {
                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Employee", "Employee")
                        .WithMany("ActingDepartmentHeads")
                        .HasForeignKey("EmployeeId1");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.AdjustmentVoucher", b =>
                {
                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId1");

                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.InventoryItem", null)
                        .WithMany()
                        .HasForeignKey("InventoryItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.InventoryItem", "InventoryItem")
                        .WithMany()
                        .HasForeignKey("InventoryItemId1");

                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.SupplierStationery", "SupplierStationery")
                        .WithMany()
                        .HasForeignKey("SupplierStationeryId");

                    b.Navigation("Employee");

                    b.Navigation("InventoryItem");

                    b.Navigation("SupplierStationery");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.CollectionPoint", b =>
                {
                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Department", b =>
                {
                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.CollectionPoint", "CollectionPoint")
                        .WithMany()
                        .HasForeignKey("CollectionPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CollectionPoint");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Disbursement", b =>
                {
                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Department", "Department")
                        .WithMany("Disbursements")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.DisbursementDetails", b =>
                {
                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Disbursement", null)
                        .WithMany()
                        .HasForeignKey("DisbursementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Disbursement", "Disbursement")
                        .WithMany()
                        .HasForeignKey("DisbursementId1");

                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.InventoryItem", null)
                        .WithMany()
                        .HasForeignKey("InventoryItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.InventoryItem", "InventoryItem")
                        .WithMany()
                        .HasForeignKey("InventoryItemId1");

                    b.Navigation("Disbursement");

                    b.Navigation("InventoryItem");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Employee", b =>
                {
                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Department", null)
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId1");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.InventoryItem", b =>
                {
                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.ItemCategory", "ItemCategory")
                        .WithMany()
                        .HasForeignKey("ItemCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemCategory");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.InventoryManagement", b =>
                {
                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId1");

                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.InventoryItem", "InventoryItem")
                        .WithMany()
                        .HasForeignKey("InventoryItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("InventoryItem");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.PurchaseOrder", b =>
                {
                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.PurchaseOrderDetails", b =>
                {
                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.InventoryItem", "InventoryItem")
                        .WithMany()
                        .HasForeignKey("InventoryItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany()
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InventoryItem");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Request", b =>
                {
                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Disbursement", "Disbursement")
                        .WithMany()
                        .HasForeignKey("DisbursementId");

                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId1");

                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Retrieval", "Retrieval")
                        .WithMany()
                        .HasForeignKey("RetrievalId");

                    b.Navigation("Disbursement");

                    b.Navigation("Employee");

                    b.Navigation("Retrieval");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.RequestDetails", b =>
                {
                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.InventoryItem", "InventoryItem")
                        .WithMany()
                        .HasForeignKey("InventoryItemId");

                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Request", "Request")
                        .WithMany()
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InventoryItem");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Retrieval", b =>
                {
                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId1");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.RetrievalDetails", b =>
                {
                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.InventoryItem", "InventoryItem")
                        .WithMany()
                        .HasForeignKey("InventoryItemId");

                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Retrieval", "Retrieval")
                        .WithMany()
                        .HasForeignKey("RetrievalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InventoryItem");

                    b.Navigation("Retrieval");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.SupplierStationery", b =>
                {
                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.InventoryItem", null)
                        .WithMany()
                        .HasForeignKey("InventoryItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.InventoryItem", "InventoryItem")
                        .WithMany()
                        .HasForeignKey("InventoryItemId1");

                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Supplier", null)
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId1");

                    b.Navigation("InventoryItem");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Department", b =>
                {
                    b.Navigation("Disbursements");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("DonVo.CQRS.SignalR.BogusMoqTest.Core.Models.Employee", b =>
                {
                    b.Navigation("ActingDepartmentHeads");
                });
#pragma warning restore 612, 618
        }
    }
}
